{
  "name": "aframe-altspace-component",
  "version": "1.0.0",
  "description": "aframe-altspace-component makes A-frame apps compatible with AltspaceVR.",
  "main": "index.js",
  "scripts": {
    "build": "browserify examples/main.js -o examples/build.js",
    "dev": "budo examples/main.js:build.js --dir examples --port 8000 --live --open",
    "dist": "webpack index.js dist/aframe-altspace-component.js && webpack -p index.js dist/aframe-altspace-component.min.js",
    "postpublish": "npm run dist",
    "preghpages": "npm run build && rm -rf gh-pages && cp -r examples gh-pages",
    "ghpages": "npm run preghpages && ghpages -p gh-pages"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AltspaceVR/aframe-altspace-component.git"
  },
  "keywords": [
    "aframe",
    "aframe-component",
    "layout",
    "aframe-vr",
    "vr",
    "aframe-layout",
    "mozvr",
    "webvr",
    "altspacevr",
    "altspace"
  ],
  "author": "Amber Roy <amber.roy@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/AltspaceVR/aframe-altspace-component/issues"
  },
  "homepage": "https://github.com/AltspaceVR/aframe-altspace-component#readme",
  "devDependencies": {
    "aframe": "0.3.0",
    "browserify": "13.1.0",
    "browserify-css": "0.9.2",
    "budo": "9.2.0",
    "ghpages": "0.0.3",
    "webpack": "1.13.2"
  }
  
  AFRAME.registerComponent('altspace-collider', {
        schema: { enabled: { default: true } },
        init: function () {
          var flags = {collider: {enabled: this.data.enabled}};
          var self = this;
          function setColliderFlag() {
            self.el.object3D.userData.altspace = flags;
            self.el.object3D.traverse(function (obj) {
              if (obj instanceof THREE.Mesh) {
                obj.userData.altspace = flags;
              }
            })
          }
          setColliderFlag();
          this.el.addEventListener('model-loaded', setColliderFlag);
        }
      });
}
